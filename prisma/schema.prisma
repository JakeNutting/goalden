// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            Int         @id @default(autoincrement())
  email         String      @unique
  name          String?
  groups        Group[]
  groupItems    GroupItem[]
}

model Group {
  id            Int         @id @default(autoincrement())
  groupName     String
  groupType     String
  createdAt     DateTime    @default(now())
  createdBy     User        @relation(fields: [createdById], references: [id])
  createdById   Int     
  isActive      Boolean     @default(true)      
  groupItems    GroupItem[]
}

model Accounts {
  id            Int         @id @default(autoincrement())
  accountName          String
  accountType          AccountTypes   @relation(fields: [accountTypeId], references: [id])
  accountTypeId        Int
  startingAllowance    Decimal
  organizationId       Int
  createdAt            DateTime    @default(now())
  isActive             Boolean     @default(true)
  accountActivities    AccountActivities[]
}

model AccountActivities {
  id             Int         @id @default(autoincrement())
  ammount                       Decimal
  account                       Accounts   @relation(fields: [accountId], references: [id])
  accountId                     Int
  activityType                  ActivityTypes   @relation(fields: [activityTypeId], references: [id])
  activityTypeId                Int
  createdAt                     DateTime    @default(now())
  isActive                      Boolean     @default(true)
}

model ActivityTypes {
  id            Int         @id @default(autoincrement())
  activityName              String
  isActive                  Boolean     @default(true)
  accountActivities         AccountActivities[]
}

model AccountTypes {
  id           Int          @id @default(autoincrement())
  type                    String   
  isActive                Boolean      @default(true)      
  accounts                Accounts[]
}

model GroupItem {
  id            Int         @id @default(autoincrement())
  itemName      String
  createdAt     DateTime    @default(now())
  createdBy     User        @relation(fields: [createdById], references: [id])
  createdById   Int
  isActive      Boolean     @default(true)        
  group         Group       @relation(fields: [groupId], references: [id])
  groupId       Int
}
